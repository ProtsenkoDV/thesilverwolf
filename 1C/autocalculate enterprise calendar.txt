Функция ПолучитьНормуДней(Период)

        Норма = Новый Массив;

        //{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

        // Данный фрагмент построен конструктором.

        // При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

       

        Запрос = Новый Запрос;

        Запрос.Текст =

        "ВЫБРАТЬ ПЕРВЫЕ 1

        |    ДанныеПроизводственногоКалендаряПомесячно.РабочихЧасовДлительностьНедели40Часов КАК Норма40,

        |    ДанныеПроизводственногоКалендаряПомесячно.РабочихЧасовДлительностьНедели36Часов КАК Норма36

        |ИЗ

        |    РегистрСведений.ДанныеПроизводственногоКалендаряПомесячно КАК ДанныеПроизводственногоКалендаряПомесячно

        |ГДЕ

        |    ДанныеПроизводственногоКалендаряПомесячно.Год = &Год

        |    И ДанныеПроизводственногоКалендаряПомесячно.Месяц = &Месяц";

       

        Запрос.УстановитьПараметр("Год", ГОД(Период));

        Запрос.УстановитьПараметр("Месяц", НАЧАЛОМЕСЯЦА(Период));

       

        РезультатЗапроса = Запрос.Выполнить();

       

        ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

       

        Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

            // Вставить обработку выборки ВыборкаДетальныеЗаписи

            Норма.Добавить(ВыборкаДетальныеЗаписи.Норма40);

            Норма.Добавить(ВыборкаДетальныеЗаписи.Норма36);

        КонецЦикла;

       

        Возврат Норма;

       

        //}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

    КонецФункции

   

   

    Функция ПолучитьСреднемесячнуюНорму(Период)

       

        Средний = Новый Массив;

        //{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

        // Данный фрагмент построен конструктором.

        // При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

       

        Запрос = Новый Запрос;

        Запрос.Текст =

        "ВЫБРАТЬ ПЕРВЫЕ 1

        |    ВЫРАЗИТЬ(ВложенныйЗапрос.Средний40 / 12 КАК ЧИСЛО(10, 2)) КАК Средний40,

        |    ВЫРАЗИТЬ(ВложенныйЗапрос.Средний36 / 12 КАК ЧИСЛО(10, 2)) КАК Средний36

        |ИЗ

        |    (ВЫБРАТЬ ПЕРВЫЕ 1

        |        ДанныеПроизводственногоКалендаряПомесячно.Год КАК Год,

        |        СУММА(ДанныеПроизводственногоКалендаряПомесячно.РабочихЧасовДлительностьНедели40Часов) КАК Средний40,

        |        СУММА(ДанныеПроизводственногоКалендаряПомесячно.РабочихЧасовДлительностьНедели36Часов) КАК Средний36

        |    ИЗ

        |        РегистрСведений.ДанныеПроизводственногоКалендаряПомесячно КАК ДанныеПроизводственногоКалендаряПомесячно

        |    ГДЕ

        |        ДанныеПроизводственногоКалендаряПомесячно.Год = &Год

        |   

        |    СГРУППИРОВАТЬ ПО

        |        ДанныеПроизводственногоКалендаряПомесячно.Год) КАК ВложенныйЗапрос";

       

        Запрос.УстановитьПараметр("Год", ГОД(Период));

       

        РезультатЗапроса = Запрос.Выполнить();

       

        ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();

       

        Пока ВыборкаДетальныеЗаписи.Следующий() Цикл

            // Вставить обработку выборки ВыборкаДетальныеЗаписи

            Средний.Добавить(ВыборкаДетальныеЗаписи.Средний40);

            Средний.Добавить(ВыборкаДетальныеЗаписи.Средний36);

        КонецЦикла;

       

        Возврат Средний;

        //}}КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА

       

    КонецФункции

   

    &Вместо("РезультатПоФормуле")

    Функция Расш1_РезультатПоФормуле(ИсходныеДанные, ФормулаДляВыполнения, ФормулаДляПредставления, СтрокаРасчета, ИмяПоляВидРасчета = "Начисление")

       

        ФормулаДляВычисления = СтрЗаменить(ФормулаДляВыполнения, "ИсходныеДанные.", "Параметры.");

       

        Попытка

            //Обертка для определения пола сотрудника

            //Строка расчета.Начисление содержит то что надо,

            //исходные данные несут в себе значения показателя

           

            Если ИсходныеДанные.Свойство("ПолСотрудника1")  = ИСТИНА Тогда

                Пол = СтрокаРасчета.Сотрудник.ФизическоеЛицо.Пол;

                Если Пол = Перечисления.ПолФизическогоЛица.Мужской Тогда

                    ИсходныеДанные["ПолСотрудника1"] = 1;

                Иначе

                    ИсходныеДанные["ПолСотрудника1"] = 0;

                КонецЕсли;   

            КонецЕсли;

            Если ИсходныеДанные.Свойство("НормаПК")  = ИСТИНА Тогда

                Пол = СтрокаРасчета.Сотрудник.ФизическоеЛицо.Пол;

                Если Пол = Перечисления.ПолФизическогоЛица.Мужской Тогда

                    Норма = ПолучитьНормуДней(СтрокаРасчета.ДатаНачала);

                    ИсходныеДанные["НормаПК"] = Норма[0];

                Иначе

                    Норма = ПолучитьНормуДней(СтрокаРасчета.ДатаНачала);

                    ИсходныеДанные["НормаПК"] = Норма[1];

                КонецЕсли;   

            КонецЕсли;   

            Если ИсходныеДанные.Свойство("СредняяНорма")  = ИСТИНА Тогда

                Пол = СтрокаРасчета.Сотрудник.ФизическоеЛицо.Пол;

                Если Пол = Перечисления.ПолФизическогоЛица.Мужской Тогда

                    Норма = ПолучитьСреднемесячнуюНорму(СтрокаРасчета.ДатаНачала);

                    ИсходныеДанные["СредняяНорма"] = Норма[0];

                Иначе

                    Норма = ПолучитьСреднемесячнуюНорму(СтрокаРасчета.ДатаНачала);

                    ИсходныеДанные["СредняяНорма"] = Норма[1];

                КонецЕсли;   

            КонецЕсли;   

            Если ИсходныеДанные.Свойство("СуммированныйУчет")  = ИСТИНА Тогда

                Если СтрокаРасчета.ОбщийГрафик.СуммированныйУчетРабочегоВремени = ИСТИНА Тогда

                    ИсходныеДанные["СуммированныйУчет"] = 1;   

                Иначе

                    ИсходныеДанные["СуммированныйУчет"] = 0;

                КонецЕсли;

            КонецЕсли;   

           

                       

            Возврат ОбщегоНазначения.ВычислитьВБезопасномРежиме(ФормулаДляВычисления, ИсходныеДанные);

        Исключение

            Если Не ВызыватьИсключение Тогда

                Возврат 0;

            Иначе

                ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(

                НСтр("ru = 'При расчете начисления «%1» за %5 для сотрудника %2 возникла ошибка: %4

                |Формула, используемая при расчете: %3'"),

                СтрокаРасчета[ИмяПоляВидРасчета],

                СтрокаРасчета.ФизическоеЛицо,

                ФормулаДляПредставления,

                ИнформацияОбОшибке().Описание,

                Формат(СтрокаРасчета.ДатаНачала, "ДФ='ММММ гггг'"));

                ВызватьИсключение ТекстСообщения;

            КонецЕсли;

        КонецПопытки;

       

    КонецФункции